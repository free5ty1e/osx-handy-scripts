# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "debian/stretch64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
    vb.memory = "4096"
  end
  

  # The below lets us use VirtualBox for shared folders instead of rsync one-way syncing
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
  #NOTE: You may have to execute the following vagrant command to enable the VirtualBox style shared folders:
  # vagrant plugin install vagrant-vbguest
  
  
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    export ANDROID_BUILD_TOOLS_VERSION='28.0.3'
    export ANDROID_SDK_PLATFORM_VERSION='28'
    apt-get update
    apt-get install -y unzip openjdk-8-jdk
    export ANDROID_SDK_FOLDER="/home/vagrant/androidsdk"
    mkdir -pv ${ANDROID_SDK_FOLDER}
    chown -v vagrant:vagrant ${ANDROID_SDK_FOLDER}
    pushd ${ANDROID_SDK_FOLDER}
    wget --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
    ls
    unzip android-sdk.zip
    rm -fv android-sdk.zip
    tools/bin/sdkmanager --no_https --list
    yes | tools/bin/sdkmanager --licenses
    tools/bin/sdkmanager --no_https --verbose "build-tools;${ANDROID_BUILD_TOOLS_VERSION}"
    tools/bin/sdkmanager --no_https --verbose "platforms;android-${ANDROID_SDK_PLATFORM_VERSION}"
    tools/bin/sdkmanager --no_https --verbose "tools" "platform-tools" "extras;google;m2repository"
    chown -Rv vagrant:vagrant ${ANDROID_SDK_FOLDER} 
    echo "export ANDROID_HOME=\"${ANDROID_SDK_FOLDER}\"" >> /home/vagrant/.bashrc
    popd
  SHELL
end
